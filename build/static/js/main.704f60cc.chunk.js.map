{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","components/CountryPicker/CountryPicker.module.css","App.module.css","components/Chart/Chart.module.css","images/covid.png"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","url","fetchData","country","a","changeableUrl","axios","get","fetchDailyData","map","date","reportDate","total","fetchCountries","countries","name","Chart","useState","dailyData","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","dropdown","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","App","state","fetchedData","setState","this","image","src","covidImage","alt","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.704f60cc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__1jwpY\",\"card\":\"Cards_card__32LN5\",\"infected\":\"Cards_infected__2IEco\",\"recovered\":\"Cards_recovered__2BJ-x\",\"deaths\":\"Cards_deaths__32gVb\"};","import React from 'react';\r\nimport { Card, CardContent, Typography, Grid } from '@material-ui/core';\r\nimport CountUp from 'react-countup';\r\nimport cx from 'classnames';\r\n\r\nimport styles from './Cards.module.css';\r\n\r\nconst Cards = ({ data: { confirmed, recovered, deaths, lastUpdate } }) => {\r\n\tif (!confirmed) {\r\n\t\treturn 'Loading...';\r\n\t}\r\n\treturn (\r\n\t\t<div className={styles.container}>\r\n\t\t\t<Grid container spacing={3} justify=\"center\">\r\n\t\t\t\t<Grid\r\n\t\t\t\t\titem\r\n\t\t\t\t\tcomponent={Card}\r\n\t\t\t\t\txs={12}\r\n\t\t\t\t\tmd={3}\r\n\t\t\t\t\tclassName={cx(styles.card, styles.infected)}\r\n\t\t\t\t>\r\n\t\t\t\t\t<CardContent>\r\n\t\t\t\t\t\t<Typography color=\"textSecondary\" gutterBottom>\r\n\t\t\t\t\t\t\tInfected\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t<Typography variant=\"h5\">\r\n\t\t\t\t\t\t\t<CountUp\r\n\t\t\t\t\t\t\t\tstart={0}\r\n\t\t\t\t\t\t\t\tend={confirmed.value}\r\n\t\t\t\t\t\t\t\tduration={2.5}\r\n\t\t\t\t\t\t\t\tseparator=\",\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t<Typography color=\"textSecondary\">\r\n\t\t\t\t\t\t\t{new Date(lastUpdate).toDateString()}\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t<Typography variant=\"body2\">\r\n\t\t\t\t\t\t\tNumber of active cases of COVID-19\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t</CardContent>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid\r\n\t\t\t\t\titem\r\n\t\t\t\t\tcomponent={Card}\r\n\t\t\t\t\txs={12}\r\n\t\t\t\t\tmd={3}\r\n\t\t\t\t\tclassName={cx(styles.card, styles.recovered)}\r\n\t\t\t\t>\r\n\t\t\t\t\t<CardContent>\r\n\t\t\t\t\t\t<Typography color=\"textSecondary\" gutterBottom>\r\n\t\t\t\t\t\t\tRecovered\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t<Typography variant=\"h5\">\r\n\t\t\t\t\t\t\t<CountUp\r\n\t\t\t\t\t\t\t\tstart={0}\r\n\t\t\t\t\t\t\t\tend={recovered.value}\r\n\t\t\t\t\t\t\t\tduration={2.5}\r\n\t\t\t\t\t\t\t\tseparator=\",\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t<Typography color=\"textSecondary\">\r\n\t\t\t\t\t\t\t{new Date(lastUpdate).toDateString()}\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t<Typography variant=\"body2\">\r\n\t\t\t\t\t\t\tNumber of recoveries from COVID-19\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t</CardContent>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid\r\n\t\t\t\t\titem\r\n\t\t\t\t\tcomponent={Card}\r\n\t\t\t\t\txs={12}\r\n\t\t\t\t\tmd={3}\r\n\t\t\t\t\tclassName={cx(styles.card, styles.deaths)}\r\n\t\t\t\t>\r\n\t\t\t\t\t<CardContent>\r\n\t\t\t\t\t\t<Typography color=\"textSecondary\" gutterBottom>\r\n\t\t\t\t\t\t\tDeaths\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t<Typography variant=\"h5\">\r\n\t\t\t\t\t\t\t<CountUp\r\n\t\t\t\t\t\t\t\tstart={0}\r\n\t\t\t\t\t\t\t\tend={deaths.value}\r\n\t\t\t\t\t\t\t\tduration={2.5}\r\n\t\t\t\t\t\t\t\tseparator=\",\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t<Typography color=\"textSecondary\">\r\n\t\t\t\t\t\t\t{new Date(lastUpdate).toDateString()}\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t<Typography variant=\"body2\">\r\n\t\t\t\t\t\t\tNumber of deaths caused by COVID-19\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t</CardContent>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Cards;\r\n","import axios from 'axios';\r\n\r\nconst url = 'https://covid19.mathdro.id/api';\r\n\r\n/**\r\n * @description Sends GET Request to https://covid19.mathdro.id/api\r\n * @returns {Object}\r\n */\r\nexport const fetchData = async (country) => {\r\n\tlet changeableUrl = url;\r\n\r\n\tif (country) {\r\n\t\tchangeableUrl = `${url}/countries/${country}`;\r\n\t}\r\n\r\n\ttry {\r\n\t\tconst {\r\n\t\t\tdata: { confirmed, recovered, deaths, lastUpdate },\r\n\t\t} = await axios.get(changeableUrl);\r\n\r\n\t\treturn { confirmed, recovered, deaths, lastUpdate };\r\n\t} catch (error) {\r\n\t\treturn error;\r\n\t}\r\n};\r\n\r\n/**\r\n * @description Sends GET Request to https://covid19.mathdro.id/api/daily\r\n * @returns {Array}\r\n */\r\nexport const fetchDailyData = async () => {\r\n\ttry {\r\n\t\tconst { data } = await axios.get(`${url}/daily`);\r\n\r\n\t\treturn data.map(({ confirmed, deaths, reportDate: date }) => ({\r\n\t\t\tconfirmed: confirmed.total,\r\n\t\t\tdeaths: deaths.total,\r\n\t\t\tdate,\r\n\t\t}));\r\n\t} catch (error) {\r\n\t\treturn error;\r\n\t}\r\n};\r\n\r\n/**\r\n * @description Sends GET Request to https://covid19.mathdro.id/api/countries\r\n * @returns {Array}\r\n */\r\nexport const fetchCountries = async () => {\r\n\ttry {\r\n\t\tconst {\r\n\t\t\tdata: { countries },\r\n\t\t} = await axios.get(`${url}/countries`);\r\n\r\n\t\treturn countries.map((country) => country.name);\r\n\t} catch (error) {\r\n\t\treturn error;\r\n\t}\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport { fetchDailyData } from '../../api';\r\nimport { Line, Bar } from 'react-chartjs-2';\r\n\r\nimport styles from './Chart.module.css';\r\n\r\nconst Chart = ({ data: { confirmed, recovered, deaths }, country }) => {\r\n\tconst [dailyData, setDailyData] = useState([]);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst fetchAPI = async () => {\r\n\t\t\tsetDailyData(await fetchDailyData());\r\n\t\t};\r\n\r\n\t\tfetchAPI();\r\n\t}, []);\r\n\r\n\tconst lineChart = dailyData.length ? (\r\n\t\t<Line\r\n\t\t\tdata={{\r\n\t\t\t\tlabels: dailyData.map(({ date }) => date),\r\n\t\t\t\tdatasets: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tdata: dailyData.map(({ confirmed }) => confirmed),\r\n\t\t\t\t\t\tlabel: 'Infected',\r\n\t\t\t\t\t\tborderColor: '#3333ff',\r\n\t\t\t\t\t\tfill: true,\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tdata: dailyData.map(({ deaths }) => deaths),\r\n\t\t\t\t\t\tlabel: 'Deaths',\r\n\t\t\t\t\t\tborderColor: '#3333ff',\r\n\t\t\t\t\t\tbackgroundColor: 'rgba(255, 0, 0, 0.5)',\r\n\t\t\t\t\t\tfill: true,\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t}}\r\n\t\t/>\r\n\t) : null;\r\n\r\n\tconst barChart = confirmed ? (\r\n\t\t<Bar\r\n\t\t\tdata={{\r\n\t\t\t\tlabels: ['Infected', 'Recovered', 'Deaths'],\r\n\t\t\t\tdatasets: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tlabel: 'People',\r\n\t\t\t\t\t\tbackgroundColor: [\r\n\t\t\t\t\t\t\t'rgba(0, 0, 255, 0.5)',\r\n\t\t\t\t\t\t\t'rgba(0, 255, 0, 0.5)',\r\n\t\t\t\t\t\t\t'rgba(255, 0, 0, 0.5)',\r\n\t\t\t\t\t\t],\r\n\t\t\t\t\t\tdata: [confirmed.value, recovered.value, deaths.value],\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t}}\r\n\t\t\toptions={{\r\n\t\t\t\tlegend: { display: false },\r\n\t\t\t\ttitle: { display: true, text: `Current state in ${country}` },\r\n\t\t\t}}\r\n\t\t/>\r\n\t) : null;\r\n\r\n\treturn (\r\n\t\t<div className={styles.container}>{country ? barChart : lineChart}</div>\r\n\t);\r\n};\r\n\r\nexport default Chart;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { NativeSelect, FormControl } from '@material-ui/core';\r\n\r\nimport styles from './CountryPicker.module.css';\r\nimport { fetchCountries } from '../../api';\r\n\r\nconst CountryPicker = ({ handleCountryChange }) => {\r\n\tconst [fetchedCountries, setFetchedCountries] = useState([]);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst fetchAPI = async () => {\r\n\t\t\tsetFetchedCountries(await fetchCountries());\r\n\t\t};\r\n\r\n\t\tfetchAPI();\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<div className={styles.dropdown}>\r\n\t\t\t<FormControl className={styles.formControl}>\r\n\t\t\t\t<NativeSelect\r\n\t\t\t\t\tdefaultValue=\"\"\r\n\t\t\t\t\tonChange={(e) => handleCountryChange(e.target.value)}\r\n\t\t\t\t>\r\n\t\t\t\t\t<option value=\"\">Global</option>\r\n\t\t\t\t\t{fetchedCountries.map((country, i) => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<option key={i} value={country}>\r\n\t\t\t\t\t\t\t\t{country}\r\n\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t})}\r\n\t\t\t\t</NativeSelect>\r\n\t\t\t</FormControl>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default CountryPicker;\r\n","import React, { Component } from 'react';\r\n\r\nimport Cards from './components/Cards/Cards';\r\nimport Chart from './components/Chart/Chart';\r\nimport CountryPicker from './components/CountryPicker/CountryPicker';\r\nimport styles from './App.module.css';\r\nimport { fetchData } from './api';\r\n\r\nimport covidImage from './images/covid.png';\r\n\r\nclass App extends Component {\r\n\tstate = {\r\n\t\tdata: {},\r\n\t\tcountry: '',\r\n\t};\r\n\r\n\tasync componentDidMount() {\r\n\t\tconst fetchedData = await fetchData();\r\n\r\n\t\tthis.setState({\r\n\t\t\tdata: fetchedData,\r\n\t\t});\r\n\t}\r\n\r\n\thandleCountryChange = async (country) => {\r\n\t\tconst fetchedData = await fetchData(country);\r\n\r\n\t\tthis.setState({\r\n\t\t\tdata: fetchedData,\r\n\t\t\tcountry: country,\r\n\t\t});\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst { data, country } = this.state;\r\n\t\treturn (\r\n\t\t\t<div className={styles.container}>\r\n\t\t\t\t<img className={styles.image} src={covidImage} alt=\"Covid-19\" />\r\n\t\t\t\t<Cards data={data} />\r\n\t\t\t\t<CountryPicker handleCountryChange={this.handleCountryChange} />\r\n\t\t\t\t<Chart data={data} country={country} />\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__3b3dj\",\"dropdown\":\"CountryPicker_dropdown__1WiyW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__jmlt6\",\"image\":\"App_image__1rqTJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__3-y7i\"};","module.exports = __webpack_public_path__ + \"static/media/covid.d7265326.png\";"],"sourceRoot":""}